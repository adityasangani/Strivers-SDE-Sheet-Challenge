Problem link: https://leetcode.com/problems/rotate-image/description/
//Brute force: 
class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        //brute force
        int n = matrix.size();
        vector<vector<int>> arr(n, vector<int>(n, 0));
        for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                arr[j][n-1-i] = matrix[i][j];
            }
        }
        for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                matrix[i][j] = arr[i][j];
            }
        }
    }
};

//optimized approach
class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        //optimized approach
        int n = matrix.size();
        //we will first find the transpose of the matrix, and then reverse it.
        //finding transpose of matrix:
        for(int i=0; i<n; i++){
            for(int j=i; j<n; j++){
                if(i==j) continue;
                else{
                    swap(matrix[i][j], matrix[j][i]);
                }
            }
        }
        //now we will reverse each row
        for(int i=0; i<n; i++){
            reverse(matrix[i].begin(), matrix[i].end());
        }
    }
};
