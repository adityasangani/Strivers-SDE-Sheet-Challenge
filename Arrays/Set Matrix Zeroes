//The approach which has a space complexity of O(n+M):
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int n = matrix.size();
        int m = matrix[0].size();
        vector<int> row(n, 0);
        vector<int> col(m, 0);

        //marking the row and col vectors
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(matrix[i][j]==0){
                    row[i] = 1;
                    col[j] = 1;
                }
            }
        }

        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(row[i]==1 || col[j] == 1){
                    matrix[i][j] = 0;
                }
            }
        }
        
       
    }
};

//The approach which has a O(1) space complexity (optimum approach)
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        //most optimal approach, O(1) space complexity

        int n = matrix.size();
        int m = matrix[0].size();
        // vector<int> row(n, 0); -> matrix[0][..]
        // vector<int> col(m, 0); -> matrix[..][0]
        int col0  =1; 
        //marking the row and col vectors
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(matrix[i][j]==0){
                    //mark the ith row
                    matrix[i][0] = 0;
                    //mark the jth col
                    if(j!=0){
                        matrix[0][j] = 0;
                    }
                    else{
                        col0 = 0;
                    }
                    

                }
            }
        }

        for(int i=1; i<n; i++){
            for(int j=1; j<m; j++){
                if(matrix[i][j]!=0){
                    if(matrix[0][j]==0 || matrix[i][0]==0){
                        matrix[i][j] = 0;
                    }
                }
            }
        }
        if(matrix[0][0]==0){
            for(int j=0; j<m; j++){
                matrix[0][j] = 0;
            }
        }
        if(col0 == 0){
            for(int i=0; i<n; i++){
                matrix[i][0] = 0;
            }
        }
        
       
    }
};
