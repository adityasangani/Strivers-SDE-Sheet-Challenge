Problem link: https://practice.geeksforgeeks.org/problems/n-meetings-in-one-room-1587115620/1
class Solution
{
    public:
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.
    static bool comparator( pair<int,int>a, pair<int, int>b){
        return a.second < b.second;
    }
    int maxMeetings(int start[], int end[], int n)
    {
        // Your code here
        vector<pair<int, int>> vec;
        for(int i=0; i<n; i++){
            vec.push_back({start[i], end[i]});
        }
        sort(vec.begin(), vec.end(), comparator);
        int res = 1;
        int prev = 0;
        
        for(int i=1; i<n; i++){
            if(vec[i].first>vec[prev].second){
                res++;
                prev = i;
            }
        }
        return res;
        
        
    }
};
