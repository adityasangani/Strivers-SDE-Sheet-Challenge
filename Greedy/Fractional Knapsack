Problem link: https://practice.geeksforgeeks.org/problems/fractional-knapsack-1587115620/1
class Solution
{
    public:
    //Function to get the maximum total value in the knapsack.
    //comparator function in order to sort the arr in terms of value/weight
    static bool compare(Item &a, Item &b){
        //sorting in descending order of value/weight
        return (double)a.value/(double)a.weight > (double)b.value/(double)b.weight;
    }
    double fractionalKnapsack(int W, Item arr[], int n)
    {
        // Your code here
        sort(arr, arr+n, compare);
        double ans = 0;
        int cap = W;
        for(int i=0; i<n; i++){
            if(arr[i].weight<=cap){
                cap = cap - arr[i].weight;
                ans = ans + arr[i].value;
            }
            else{
                //partially fill it
                ans = ans + ((double)arr[i].value*cap)/(double)arr[i].weight;
                return ans;
            }
        }
        return ans;
    }
        
};
