Problem link: https://leetcode.com/problems/rotate-list/submissions/969764839/
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        //edge cases
        if(head==NULL || head->next==NULL || k==0) return head;

        //computing the length
        ListNode* curr = head;
        int len = 1;
        while(curr->next && ++len)
            curr = curr->next;
        
        //we will make it a circular linked list now
        curr->next = head;

        //now we will go till our desired node 
        k = k%len;
        k = len-k;
        while(k--){
            curr = curr->next;
        }

        //now we will break that connection
        head = curr->next;
        curr->next = NULL;
        return head;
    }
};
